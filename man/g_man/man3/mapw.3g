.TH mapw 3G
.rs
.sp -0.28i
.\".SH\(Dy
.SH NAME
.B mapw
\- maps a point on the screen into a line in 3-D world coordinates
.SH SPECIFICATION
.nf
.TP \w'FORTRAN\ \ \ 'u
C
.B "mapw(vobj, sx, sy, wx1, wy1, wz1, wx2, wy2, wz2) "
.B "Object vobj; "
.B "Screencoord sx, sy; "
.B "Coord *wx1, *wy1, *wz1, *wx2, *wy2, *wz2;"
.IP 
.TP \w'FORTRAN\ \ \ 'u
FORTRAN
.B "subroutine mapw(vobj, sx, sy, wx1,"
.B 	wy1, wz1, wx2, wy2, wz2)
.B "integer*4 vobj, sx, sy"
.B "real wx1, wy1, wz1, wx2, wy2, wz2"
.IP
.TP \w'FORTRAN\ \ \ 'u
Pascal
.B "procedure mapw(vobj: Object; sx sy: longint;"
.B	var wx1, wy1, wz1, wx2, wy2, wz2: Coord);
.SH DESCRIPTION
.B mapw
takes a pair of 2-D screen coordinates and maps them into 3-D world
coordinates.  Since the \f2z\f1 coordinate is 
missing from the screen coordinate system, the point
becomes a line in world space.
.B mapw
computes the inverse mapping from
.I vobj,
a viewing object.
.PP
A
viewing object
is a graphical object that
contains only viewport, projection, viewing transformation, and
modeling routines.  A correct mapping
from screen coordinates to world coordinates
requires the viewing object contain the
projection and viewing transformations
that mapped the displayed object from world to screen coordinates.
The system returns a
world space line, which is computed from \f2(sx, sy)\f1 and \f2vobj\f1,
as two points and stores them in the locations addressed by
\f2wx1\f1, \f2wy1\f1, \f2wz1\f1 and \f2wx2\f1, \f2wy2\f1, \f2wz2\f1.
.bp  \" required to prevent the 2nd page from only having a couple of lines
.SH "SEE ALSO"
mapw2
.sp
.I Programming Guide,
Section 9.1, Mapping Screen Coordinates to
World Coordinates 
.SH NOTE
This routine is available only in immediate mode.
