'\"macro stdmacro
.tr ~
.ds P UNIX
.nr f 0
.bd S B 3
.de SP
.if n .ul
\%[\f3\-\\$1\f1\\c
.if n .ul 0
\\$2\\$3
..
.de SF
.if n .ul
\%[\f3\-\\$1\f1]
.if n .ul 0
..
.de AR
.if \\nf \{ \
.    RE
.    nr f 0 \}
.PP
.TP 8
\f3\-\\$1\\f1
\\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8 \\$9
.nr f 1
..
.de A2
.if \\nf \{ \
.    RE
.    nr f 0 \}
.PP
.TP 8
\f3\-\\$1\f2\\$2\f1
\\$3 \\$4 \\$5 \\$6 \\$7 \\$8 \\$9
.nr f 1
..
.TH COMB 1
.SH NAME
comb \- combine \s-1SCCS\s+1 deltas
.SH SYNOPSIS
.B comb
.SF o
.SF s
.SP p sid ]
.SP c list]
files
.SH DESCRIPTION
.I Comb\^
generates a shell procedure (see
.IR sh\^ (1))
which, when run, will reconstruct the given \s-1SCCS\s+1 files.
The reconstructed files will, hopefully, be smaller than the original
files.
The arguments may be specified in any order,
but all keyletter arguments apply to all named \s-1SCCS\s+1 files.
If a directory is named,
.I comb\^
behaves as though each file in the directory were
specified as a named file,
except that non-\s-1SCCS\s+1 files
(last component of the path name does not begin with \f3s.\f1)
and unreadable files
are silently ignored.
If a name of \f3\-\f1 is given, the standard input is read;
each line of the standard input is taken to be the name of an \s-1SCCS\s+1 file
to be processed;
non-\s-1SCCS\s+1 files and unreadable files are silently ignored.
.PP
The generated shell procedure is written on the standard output.
.PP
The keyletter
arguments are as follows.
Each is explained as though only one named file is to be processed,
but the effects of any keyletter argument apply independently
to each named file.
.A2 p \s-1SID\s+1 The
.IR S "\s-1CCS\s+1 " ID entification
string (\s-1SID\s+1) of the oldest delta to be preserved.
All older deltas are discarded in the reconstructed file.
.A2 c list A
.I list\^
(see
.IR get\^ (1)
for the syntax of a \f2list\f1)
of deltas to be preserved.
All other deltas are discarded.
.AR o For
each
.B get \-e
generated, this
argument causes the reconstructed file to be accessed at
the release of the delta to be created,
otherwise the reconstructed file would be accessed at
the most recent ancestor.
Use of the
.B \-o
keyletter may decrease the size of the reconstructed \s-1SCCS\s+1 file.
It may also alter the shape of the delta tree of the original file.
.AR s This
argument causes
.I comb\^
to generate a shell procedure which, when run,
will
produce a report giving,
for each file:
the file name, size (in blocks) after combining,
original size (also in blocks), and
percentage change
computed by:
.br
.ce 1
\%100~\f3\(**\f1~(original~\-~combined)~/~original
.br
It is  recommended that before any \s-1SCCS\s+1 files are actually combined,
one should use this option to determine exactly how much space
is saved by the combining process.
.PP
If no keyletter arguments are specified,
.I comb\^
will preserve only leaf deltas and the minimal number of ancestors
needed to preserve the tree.
.SH EXAMPLE
.IP
comb s.file1  >  tmp1
.PP
produces a shell script saved in "tmp1" which will remove from the
\s-1SCCS\s+1-format file, "s.file1", all deltas previous to the last
set of changes, i.e., removes the capability to return to earlier
versions.
.SH FILES
.PD 0
.TP \w'comb?????\ \ \ 'u
.RB s . \s-1COMB\s+1
The name of the reconstructed \s-1SCCS\s+1 file.
.TP
comb?????
Temporary.
.PD
.SH "SEE ALSO"
admin(1),
delta(1),
get(1),
help(1),
prs(1),
sccsfile(4).
.br
.\""Source Code Control System User's Guide\^"
.SH DIAGNOSTICS
Use
.IR help\^ (1)
for explanations.
.SH BUGS
.I Comb\^
may rearrange the shape of the tree of deltas.
It may not save any space;
in fact, it is possible for the reconstructed file to
actually be larger than the original.
.tr ~~
.\"	@(#)comb.1	5.1 of 10/27/83
