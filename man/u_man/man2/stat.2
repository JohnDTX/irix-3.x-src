'\"macro stdmacro
.TH STAT 2
.SH NAME
stat, lstat, fstat \- get file status
.SH SYNOPSIS
.B #include <sys/types.h>
.br
.B #include <sys/stat.h>
.PP
.B int stat (path, buf)
.br
.B char \(**path;
.br
.B struct stat \(**buf;
.PP
.B int lstat (path, buf)
.br
.B char \(**path;
.br
.B struct stat \(**buf;
.PP
.B int fstat (fildes, buf)
.br
.B int fildes;
.br
.B struct stat \(**buf;
.SH DESCRIPTION
.I Path\^
points to a
path name
naming a file.
Read, write or execute permission of the named file is not required,
but all directories
listed in the
path name
leading to the file must be searchable.
.I Stat\^
obtains information about the named file.
.PP
.I Lstat
is like
stat except in the case where the named file is a symbolic link,
in which case 
.I lstat
returns the information about the link, while 
.I stat
returns the information about the file link references.
.PP
Similarly,
.I fstat\^
obtains information about an open file
known by the
file descriptor
.IR fildes ,
obtained from a successful
.IR open ,
.IR creat ,
.IR dup ,
.IR fcntl ,
or
.I pipe\^
system call.
.PP
.I Buf\^
is a pointer to a
.I stat\^
structure into which information
is placed concerning the file.
.PP
The contents of the structure pointed to by
.I buf\^
include the following members:
.br
struct stat {
.RS
.ta \w'ushort\ \ 'u +\w'st_mtime;\ \ \ \ 'u
.br
dev_t	st_dev;	/\(**
.SM ID
of device containing \(**/
.br
		/\(** a directory entry for this file \(**/
.br
long	st_ino;	/\(** Inode number \(**/
.br
ushort	st_mode;	/\(** File mode; see
.IR mknod (2)
\(**/
.br
short	st_nlink;	/\(** Number of links \(**/
.br
ushort	st_uid;	/\(** User
.SM ID
of the file's owner \(**/
.br
ushort	st_gid;		/\(** Group
.SM ID
of the file's group \(**/
.br
dev_t	st_rdev;	/\(**
.SM ID
of device \(**/
.br
		/\(** This entry is defined only for \(**/
.br
		/\(** character special or block special files \(**/
.br
off_t	st_size;	/\(** File size in bytes \(**/
.br
time_t	st_atime;	/\(** Time of last access \(**/
.br
time_t	st_mtime;	/\(** Time of last data modification \(**/
.br
time_t	st_ctime;	/\(** Time of last file status change \(**/
.br
		/\(** Times measured in seconds since \(**/
.br
		/\(** 00:00:00
.SM GMT\*S,
Jan. 1, 1970 \(**/
.br
.RE
};
.PP
.TP
.B st_atime
Time when file data was last accessed.
Changed by the following system calls:
.IR creat (2),
.IR mknod (2),
.IR pipe (2),
.IR utime (2),
and
.IR read (2).
.TP
.B st_mtime
Time when data was last modified.
Changed by the following system calls:
.IR creat (2),
.IR mknod (2),
.IR pipe (2),
.IR utime (2),
and
.IR write (2).
.TP
.B st_ctime
Time when file status was last changed.
Changed by the following system calls:
.IR chmod (2),
.IR chown (2),
.IR creat (2),
.IR link (2),
.IR mknod (2),
.IR pipe (2),
.IR unlink (2),
.IR utime (2),
and
.IR write (2).
.PP
.I Stat\^
will fail if one or more of the following are true:
.IP "" .3i
A component of the
path prefix
is not a directory.
.SM
\%[ENOTDIR]
.IP "" .3i
The named file does not exist.
.SM
\%[ENOENT]
.IP
Search permission is denied for a component of the
path prefix.
.SM
\%[EACCES]
.IP
.I Buf\^
or
.I path\^
points to an invalid address.
.SM
\%[EFAULT]
.PP
.I Fstat\^
will fail if one or more of the following are true:
.IP "" .3i
.I Fildes\^
is not a valid open file descriptor.
.SM
\%[EBADF]
.IP
.I Buf\^
points to an invalid address.
.SM
\%[EFAULT]
.SH "RETURN VALUE"
Upon successful completion a value of 0 is returned.
Otherwise, a value of \-1 is returned and
.I errno\^
is set to indicate the error.
.SH "SEE ALSO"
chmod(2), chown(2), creat(2), link(2), mknod(2), time(2), unlink(2).
.SH ASSEMBLER
.ta \w'\f3moveq\f1\ \ \ 'u 1.5i
.nf
.B moveq	#40,D0	| sys stat
.B movl	path,A0
.B movl	buf,D1
.B trap	#0
.PP
Carry bit set on failure and cleared on success.
.sp
.B moveq	#38,D0	| sys lstat
.B movl	path,A0
.B movl	buf,D1
.B trap	#0
.fi
.PP
Carry bit set on failure and cleared on success.
.sp
.B moveq	#35,D0	| sys fstat
.B movl	fildes,A0
.B movl	buf,D1
.B trap	#0
.fi
.PP
Carry bit set on failure and cleared on success.
.DT
.\"	@(#)stat.2	5.1 of 10/19/83
.SH NOTE
The
.B stat
structure member
.B st_ino
has been changed from an unsigned 16-bit type,
.BR ino_t ,
to a
.B long
integer.
This change ensures correct interoperation with NFS filesystems
having more than 65535 nodes.
Programs depending on the old representation type
should use the
.B oldstat
structure declared in
.B <sys/stat.h>
and should call
.BR oldstat ,
.BR oldlstat ,
or
.BR oldfstat .
Binary executables depending on the old type will run without
change under the new regime.
