'\"macro stdmacro
.TH TIMES 2 
.SH NAME
times \- get process and child process times
.SH SYNOPSIS
.B #include <sys/types.h>
.br
.B #include <sys/times.h>
.PP
.B long times (buffer)
.br
.B struct tms \(**buffer;
.SH DESCRIPTION
.I Times\^
fills the structure pointed to by
.I buffer\^
with time-accounting information.
The following is the contents of this structure:
.PP
.nf
.ta \w'struct\ \ 'u +\w'time_t\ \ \ 'u
struct	tms {
	time_t	tms_utime;
	time_t	tms_stime;
	time_t	tms_cutime;
	time_t	tms_cstime;
};
.fi
.PP
This information comes from the calling process
and each of its terminated child processes for which it has executed a
.IR wait .
All times are in 60ths of a second.
.PP
.I Tms_utime\^
is the
.SM CPU
time used while executing instructions in the user space of the
calling process.
.PP
.I Tms_stime\^
is the
.SM CPU
time used by the system on behalf of the calling process.
.PP
.I Tms_cutime\^
is the sum of the
.IR "tms_utime"s
and
.IR "tms_cutime"s
of the child processes.
.PP
.I Tms_cstime\^
is the sum of the
.IR "tms_stime"s
and
.IR "tms_cstime"s 
of the child processes.
.PP
.I Times\^
will fail if
.I buffer\^
points to an illegal address.
.SM
\%[EFAULT]
.SH RETURN VALUE
Upon successful completion,
.I times\^
returns the elapsed real time, in 60ths of a second, since an arbitrary
point in the past (e.g., system start-up time).
This point does not change from one invocation of
.I times\^
to another.
If
.I times\^
fails, a \-1 is returned and
.I errno\^
is set to indicate the error.
.SH "SEE ALSO"
exec(2), fork(2), time(2), wait(2).
.SH ASSEMBLER
.ta \w'\f3moveq\f1\ \ \ 'u 1.5i
.nf
.B moveq	#43,D0
.B movl	buffer,A0
.B trap	#0
.fi
.DT
.\"	@(#)times.2	5.1 of 10/19/83
