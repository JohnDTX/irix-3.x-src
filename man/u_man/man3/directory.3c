'\"macro stdmacro
.TH DIRECTORY 3C
.SH NAME
directory: opendir, readdir, telldir, seekdir, rewinddir, closedir \- directory operations
.SH SYNOPSIS
.B #include <sys/types.h>
.br
.B #include <dirent.h>
.PP
.B DIR \(**opendir (filename)
.br
.B char \(**filename;
.PP
.B struct dirent \(**readdir (dirp)
.br
.B DIR \(**dirp;
.PP
.B long telldir (dirp)
.br
.B DIR \(**dirp;
.PP
.B void seekdir (dirp, loc)
.br
.B DIR \(**dirp;
.br
.B long loc;
.PP
.B void rewinddir (dirp)
.br
.B DIR
.B *dirp;
.PP
.B void
.B closedir(dirp)
.br
.B DIR
.B *dirp;
.SM
.SH DESCRIPTION
.I Opendir\^
opens the directory named by
.I filename\^
and associates a
.I directory stream\^
with it.
.I Opendir\^
returns a pointer to be used to identify the
.I directory stream\^
in subsequent operations.
The pointer
.SM
NULL
is returned if
.I filename\^
cannot be accessed or is not a directory,
or if it cannot
.IR malloc (3C)
enough memory to hold a
.SM
DIR
structure
or a buffer for the directory entries.
.PP
.I Readdir\^
returns a pointer to the next active directory entry.
No inactive entries are returned.
It returns
.SM
NULL
upon reaching the end of the directory or
upon detecting an invalid
location in the directory.
.PP
.I Telldir\^
returns the current location associated with the named
.I directory stream.
.PP
.I Seekdir\^
sets the position of the next
.I readdir\^
operation on the
.I directory stream.
The new position reverts to the one associated with the
.I directory stream\^
when the
.I telldir\^
operation from which
.I loc\^
was obtained was performed.
Values returned by
.I telldir\^
are good 
only if the directory has not changed due to compaction
or expansion.
This is not a problem with EFS or Bell file systems, but it may be
with other file system types.
.PP
.I Rewinddir\^
resets the position of the named
.I directory stream\^
to the beginning of the directory.
.PP
.I Closedir\^
closes the named
.I directory stream\^
and frees the
.SM
DIR
structure.
.SH DIAGNOSTICS
The following errors can occur as a result
of these operations.
.br
.ne 5
.PP
.I opendir\^:
.TP 15
\s-1[ENOTDIR]\s+1
A component of
.I filename\^
is not a directory.
.TP 15
\s-1[EACCES]\s+1
A component of 
.I filename\^
denies search permission.
.TP 15
\s-1[EMFILE]\s+1
The maximum number of file descriptors are currently open.
.TP 15
\s-1[EFAULT]\s+1
.I Filename\^
points outside the allocated address space.
.sp
.PP
.I readdir\^:
.TP 15
\s-1[ENOENT]\s+1
The current file pointer for the directory
is not located at a valid entry.
.TP 15
\s-1[EBADF]\s+1
The file descriptor determined by the DIR stream
is no longer valid.  This results if the 
DIR stream has been closed.
.sp
.PP
.I telldir,
.I seekdir,
and 
.I closedir\^:
.TP 15
\s-1[EBADF]\s+1
The file descriptor determined by the
DIR
stream is no longer valid.
This results if the
DIR
stream has been closed.
.SH EXAMPLE
Sample code which searches a directory for entry \f2name\f1:
.PP
\f3
.br
	dirp = opendir( "." );
.br
	while ( (dp = readdir( dirp )) != NULL )
.br
		if ( strcmp( dp\->d_name, name ) == 0 ) {
.br
			closedir( dirp );
.br
			return FOUND;
.br
		}
.br
	closedir( dirp );
.br
	return NOT_FOUND;
\f1
.SH SEE ALSO
getdents(2), scandir(3C), dirent(4).
.SH WARNINGS
An interface with the same routine names, but different data structures,
is described in
.IR directory (3B).
The set of routines used is determined by which of 
.I <dirent.h>
or
.I <ndir.h>
is included.
.PP
.I Rewinddir\^
is implemented as a macro,
so its function address cannot be taken.
