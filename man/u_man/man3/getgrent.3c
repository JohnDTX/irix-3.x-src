'\"macro stdmacro
.TH GETGRENT 3C 
.SH NAME
getgrent, getgrgid, getgrnam, setgrent, endgrent \- get group file entry
.SH SYNOPSIS
.B #include <grp.h>
.PP
.B struct group \(**getgrent ( )
.PP
.B struct group \(**getgrgid (gid)
.br
.B int gid;
.PP
.B struct group \(**getgrnam (name)
.br
.B char \(**name;
.PP
.B void setgrent ( )
.PP
.B void endgrent ( )
.SH DESCRIPTION
.IR Getgrent ,
.I getgrgid\^
and
.I getgrnam\^
each return pointers
to an object
with the following structure
containing the broken-out
fields of a line in the
.B /etc/group
file.
Each line contains a ``group'' structure, defined in the
.I <grp.h>\^
header file.
.PP
.RS .3i
.nf
.ta \w'struct\ 'u +\w'group {\ 'u +\w'*gr_passwd;\ \ \ 'u
struct	group {
	char	\(**gr_name;	/\(** the name of the group \(**/
	char	\(**gr_passwd;	/\(** the encrypted group password \(**/
	int	gr_gid;	/\(** the numerical group ID \(**/
	char	\(**\(**gr_mem;	/\(** vector of pointers to member names \(**/
};
.fi
.RE
.DT
.PP
.I Getgrent\^
when first called returns a pointer to the first group structure in the file;
thereafter, it returns a pointer to the next group structure in the file;
so, successive calls may be
used to search the entire file.
.I Getgrgid\^
searches from the beginning of the file until a numerical group id
matching
.I gid\^
is found and returns a pointer to the particular structure in which 
it was found.
.I Getgrnam\^
searches from the beginning of the file until a group name matching
.I name\^
is found and returns a
pointer to the particular structure in which it was found.
If an end-of-file or an error
is encountered on reading, these functions return a
.SM NULL
pointer.
.PP
A call to
.I setgrent\^
has the effect of rewinding
the group file
to allow
repeated searches.
.I Endgrent\^
may be called to
close the group file
when processing is complete.
.SH FILES
/etc/group
.SH "SEE ALSO"
getlogin(3C), getpwent(3C), group(4).
.SH DIAGNOSTICS
A
.SM
.B NULL
pointer
is returned on
.SM
.B EOF
or error.
.SH WARNING
The above routines use \f3<stdio.h>\fP, which causes 
them to increase the size of programs,
not otherwise using standard I/O, more
than might be expected.
.SH NOTE
There are two versions of the primitives
documented in this manual entry:  a vanilla
version and a Yellow Pages version.
The programmatic interface of both versions
is identical.
The vanilla version gets its information from an ASCII
file in
.IR /etc .
The Yellow Pages version knows about
Sun's Yellow Pages distributed
lookup service.
If you want the Yellow Pages version, link
the program according to the instructions
for (3Y) primitives as described in
.IR intro (3).
Refer to
.IR ypserv (1M)
and the
.I NFS User's Guide
for more information about the Yellow Pages.
.SH BUGS
All information
is contained in a static area,
so it must be copied if it is
to be saved.
.\"	@(#)getgrent.3c	5.1 of 10/19/83
