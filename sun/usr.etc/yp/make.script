#
#	@(#)make.script 1.1 86/02/05 SMI
#	@(#)make.script	2.1 86/04/16 NFSSRC
#
DIR =/etc
DOM = `domainname`
NOPUSH = ""
PATH = /bin:/etc:/usr/bin:/usr/etc/yp:.
YPDIR = /usr/etc/yp/$(DOM)
YPPUSH = yppush
PWFILE =$(DIR)/passwd
ALIASES = /usr/lib/aliases
SHELL = /bin/sh

all: passwd group hosts ethers networks rpc services protocols \
	netgroup aliases

passwd.time: $(PWFILE)
	-@if [ -f $(PWFILE) ]; then \
		awk 'BEGIN { FS=":"; OFS="\t"; } /^[a-zA-Z0-9_]/ { print $$1, $$0 }' \
		  $(PWFILE) | makedbm - $(YPDIR)/`ypmapname passwd.byname`; \
		awk 'BEGIN { FS=":"; OFS="\t"; } /^[a-zA-Z0-9_]/ { print $$3, $$0 }' \
		  $(PWFILE) | makedbm - $(YPDIR)/`ypmapname passwd.byuid`; \
		touch passwd.time; \
		echo "updated passwd"; \
		if [ ! $(NOPUSH) ]; then \
			$(YPPUSH) passwd.byname; \
			$(YPPUSH) passwd.byuid; \
			echo "pushed passwd"; \
		else \
			: ; \
		fi \
	else \
		echo "couldn't find $(PWFILE)"; \
	fi

group.time: $(DIR)/group
	-@if [ -f $(DIR)/group ]; then \
		awk 'BEGIN { FS=":"; OFS="\t"; } { print $$1, $$0 }' \
		    $(DIR)/group | makedbm - $(YPDIR)/`ypmapname group.byname`; \
		awk 'BEGIN { FS=":"; OFS="\t"; } { print $$3, $$0 }' \
		    $(DIR)/group | makedbm - $(YPDIR)/`ypmapname group.bygid`; \
		touch group.time; \
		echo "updated group"; \
		if [ ! $(NOPUSH) ]; then \
			$(YPPUSH) group.byname; \
			$(YPPUSH) group.bygid; \
			echo "pushed group"; \
		else \
			: ; \
		fi \
	else \
		echo "couldn't find $(DIR)/group"; \
	fi

hosts.time: $(DIR)/hosts
	-@if [ -f $(DIR)/hosts ]; then \
		sed -e "/^#/d" -e s/#.*$$// $(DIR)/hosts | stdhosts \
		    | awk '{for (i = 2; i <= NF; i++) print $$i, $$0}' \
		    | makedbm - $(YPDIR)/`ypmapname hosts.byname`; \
		stdhosts $(DIR)/hosts | \
		    awk 'BEGIN { OFS="\t"; } $$1 !~ /^#/ { print $$1, $$0 }' \
		    | makedbm - $(YPDIR)/`ypmapname hosts.byaddr`; \
		touch hosts.time; \
		echo "updated hosts"; \
		if [ ! $(NOPUSH) ]; then \
			$(YPPUSH) hosts.byname; \
			$(YPPUSH) hosts.byaddr; \
			echo "pushed hosts"; \
		else \
			: ; \
		fi \
	else \
		echo "couldn't find $(DIR)/hosts"; \
	fi

ethers.time: $(DIR)/ethers
	-@if [ -f $(DIR)/ethers ]; then \
		sed -e "/^#/d" -e s/#.*$$// $(DIR)/ethers \
		| awk 'BEGIN { X["A"]="a"; X["B"]="b"; X["C"]="c"; X["D"]="d";X["E"]="e"; X["F"]="f"; } \
		    { for (i = 1; i <= length($$1); i++) \
		      if (substr($$1, i, 1) >= "A" && substr($$1, i, 1) <= "Z") \
			printf("%s", X[substr($$1, i, 1)]) ; \
		      else \
			printf("%s", substr($$1, i, 1)); printf(" "); \
		    print $$2}' \
		|awk '{print $$1, $$0; for (i = 3;i <= NF;i++) print $$i,$$0}' \
		| makedbm - $(YPDIR)/`ypmapname ethers.byaddr`; \
		awk 'BEGIN { OFS="\t"; } $$1 !~ /^#/ { print $$2, $$0 }' \
		   $(DIR)/ethers | \
		makedbm - $(YPDIR)/`ypmapname ethers.byname`;\
		touch ethers.time; \
		echo "updated ethers"; \
		if [ ! $(NOPUSH) ]; then \
			$(YPPUSH) ethers.byname; \
			$(YPPUSH) ethers.byaddr; \
			echo "pushed ethers"; \
		else \
			: ; \
		fi \
	else \
		echo "couldn't find $(DIR)/ethers"; \
	fi

networks.time: $(DIR)/networks
	-@if [ -f $(DIR)/networks ]; then \
		sed -e "/^#/d" -e s/#.*$$// $(DIR)/networks | awk \
		    '{print $$1, $$0; for (i = 3;i <= NF;i++) print $$i,$$0}' \
		    | makedbm - $(YPDIR)/`ypmapname networks.byname`; \
		awk 'BEGIN { OFS="\t"; } $$1 !~ /^#/ { print $$2, $$0 }' \
		   $(DIR)/networks | makedbm - $(YPDIR)/`ypmapname networks.byaddr`;\
		touch networks.time; \
		echo "updated networks"; \
		if [ ! $(NOPUSH) ]; then \
			$(YPPUSH) networks.byname; \
			$(YPPUSH) networks.byaddr; \
			echo "pushed networks"; \
		else \
			: ; \
		fi \
	else \
		echo "couldn't find $(DIR)/networks"; \
	fi

services.time: $(DIR)/services
	-@if [ -f $(DIR)/services ]; then \
		awk 'BEGIN { OFS="\t"; } $$1 !~ /^#/ { print $$2, $$0 }' \
		    $(DIR)/services| makedbm - $(YPDIR)/`ypmapname services.byname`;\
		touch services.time; \
		echo "updated services"; \
		if [ ! $(NOPUSH) ]; then \
			$(YPPUSH) services.byname; \
			echo "pushed services"; \
		else \
			: ; \
		fi \
	else \
		echo "couldn't find $(DIR)/services"; \
	fi

rpc.time: $(DIR)/rpc
	-@if [ -f $(DIR)/rpc ]; then \
		awk 'BEGIN { OFS="\t"; } $$1 !~ /^#/ { print $$2, $$0 }' \
		    $(DIR)/rpc| makedbm - $(YPDIR)/`ypmapname rpc.bynumber`;\
		touch rpc.time; \
		echo "updated rpc"; \
		if [ ! $(NOPUSH) ]; then \
			$(YPPUSH) rpc.bynumber; \
			echo "pushed rpc"; \
		else \
			: ; \
		fi \
	else \
		echo "couldn't find $(DIR)/rpc"; \
	fi

protocols.time: $(DIR)/protocols
	-@if [ -f $(DIR)/protocols ]; then \
		awk 'BEGIN { OFS="\t"; } $$1 !~ /^#/ { print $$2, $$0 }' \
		    $(DIR)/protocols | makedbm - \
		    $(YPDIR)/`ypmapname protocols.bynumber`; \
		sed -e "/^#/d" -e s/#.*$$// $(DIR)/protocols | awk \
		    '{print $$1,$$0; for (i = 3;i <= NF;i++) print $$i, $$0}' \
		    | makedbm - $(YPDIR)/`ypmapname protocols.byname`; \
		touch protocols.time; \
		echo "updated protocols"; \
		if [ ! $(NOPUSH) ]; then \
			$(YPPUSH) protocols.byname; \
			$(YPPUSH) protocols.bynumber; \
			echo "pushed protocols"; \
			else \
			: ; \
		fi \
	else \
		echo "couldn't find $(DIR)/protocols"; \
	fi

netgroup.time: $(DIR)/netgroup
	-@if [ -f $(DIR)/netgroup ]; then \
		makedbm $(DIR)/netgroup $(YPDIR)/`ypmapname netgroup`; \
		revnetgroup -u | makedbm - $(YPDIR)/`ypmapname netgroup.byuser`; \
		revnetgroup -h | makedbm - $(YPDIR)/`ypmapname netgroup.byhost`; \
		touch netgroup.time; \
		echo "updated netgroup"; \
		if [ ! $(NOPUSH) ]; then \
			$(YPPUSH) netgroup; \
			$(YPPUSH) netgroup.byuser; \
			$(YPPUSH) netgroup.byhost; \
			echo "pushed netgroup"; \
		else \
			: ; \
		fi \
	else \
		echo "couldn't find $(DIR)/netgroup"; \
	fi

aliases.time: $(ALIASES)
	-@if [ -f $(ALIASES) ]; then \
		DBNM=$(YPDIR)/`ypmapname mail.aliases`; \
		TEMP=$$DBNM.t; \
		cp $(ALIASES) $$TEMP; \
		/usr/lib/sendmail -bi -oA$$TEMP; \
		mv -f $$TEMP.dir $$DBNM.dir; \
		mv -f $$TEMP.pag $$DBNM.pag; \
		rm $$TEMP; \
		touch aliases.time; \
		echo "updated aliases"; \
		if [ ! $(NOPUSH) ]; then \
			$(YPPUSH) mail.aliases; \
			echo "pushed aliases"; \
		fi \
	else \
		echo "couldn't find $(ALIASES)"; \
	fi

passwd: passwd.time
group: group.time
hosts: hosts.time
ethers: ethers.time
networks: networks.time
rpc: rpc.time
services: services.time
protocols: protocols.time
netgroup: netgroup.time
aliases: aliases.time
$(PWFILE):
$(DIR)/group:
$(DIR)/hosts:
$(DIR)/ethers:
$(DIR)/networks:
$(DIR)/rpc:
$(DIR)/services:
$(DIR)/protocols:
$(DIR)/netgroup:
$(ALIASES):
